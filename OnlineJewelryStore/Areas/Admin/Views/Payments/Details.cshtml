@model OnlineJewelryStore.Models.Payment

@{
    ViewBag.Title = "Payment Details - #" + Model.PaymentID;
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Dashboard")"><i class="bi bi-speedometer2"></i> Dashboard</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Payments")"><i class="bi bi-credit-card"></i> Payments</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Payment #@Model.PaymentID</li>
    </ol>
</nav>

<!-- Page Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="bi bi-receipt text-primary"></i> Payment #@Model.PaymentID
        </h2>
        <p class="text-muted mb-0">View and manage payment transaction details</p>
    </div>
    <div class="d-flex gap-2">
        <a href="@Url.Action("Edit", new { id = Model.PaymentID })" class="btn btn-primary">
            <i class="bi bi-pencil"></i> Edit Payment
        </a>
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<!-- TempData Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle-fill"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <!-- Left Column: Payment Info -->
    <div class="col-lg-8">
        <!-- Payment Information Card -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-credit-card"></i> Payment Information
                </h5>
                @Html.Partial("_PaymentStatusBadge", Model.Status)
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="text-muted small">Payment ID</label>
                        <div class="fw-semibold">#@Model.PaymentID</div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Order ID</label>
                        <div>
                            <a href="@Url.Action("Details", "Orders", new { id = Model.OrderID })" class="text-decoration-none">
                                <i class="bi bi-box-seam"></i> Order #@Model.OrderID
                            </a>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Amount</label>
                        <div class="fs-4 fw-bold text-success">
                            @Model.Amount.ToString("N0") <span class="fs-6">@Model.Currency</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Payment Method</label>
                        <div>
                            <span class="badge bg-light text-dark border fs-6">
                                <i class="bi @OnlineJewelryStore.Areas.Admin.Controllers.PaymentsController.GetMethodIcon(Model.Method)"></i>
                                @Model.Method
                            </span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Provider</label>
                        <div class="fw-semibold">
                            @if (!string.IsNullOrEmpty(Model.Provider))
                            {
                                @Model.Provider
                            }
                            else
                            {
                                <span class="text-muted fst-italic">Not specified</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Transaction Reference</label>
                        <div class="font-monospace">
                            @if (!string.IsNullOrEmpty(Model.TransactionRef))
                            {
                                <small>@Model.TransactionRef</small>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">No reference</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Created At</label>
                        <div>
                            <i class="bi bi-calendar-check text-primary"></i>
                            @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="text-muted small">Captured At</label>
                        <div>
                            @if (Model.CapturedAt.HasValue)
                            {
                                <i class="bi bi-check-circle text-success"></i>
                                @Model.CapturedAt.Value.ToString("dd/MM/yyyy HH:mm:ss")
                            }
                            else
                            {
                                <span class="text-muted fst-italic">Not captured yet</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Information Card -->
        @if (Model.Order != null)
        {
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-box-seam"></i> Related Order Information
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="text-muted small">Order Date</label>
                            <div>
                                <i class="bi bi-calendar3"></i>
                                @Model.Order.OrderDate.ToString("dd/MM/yyyy HH:mm")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="text-muted small">Order Status</label>
                            <div>
                                <span class="badge bg-@(Model.Order.Status == "Delivered" ? "success" : Model.Order.Status == "Cancelled" ? "danger" : Model.Order.Status == "Shipped" ? "info" : "warning")">
                                    @Model.Order.Status
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="text-muted small">Customer</label>
                            <div>
                                @if (Model.Order.User != null)
                                {
                                    <a href="@Url.Action("Details", "Users", new { id = Model.Order.UserID })" class="text-decoration-none">
                                        <i class="bi bi-person-circle"></i>
                                        @Model.Order.User.FirstName @Model.Order.User.LastName
                                    </a>
                                    <br />
                                    <small class="text-muted">@Model.Order.User.Email</small>
                                }
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="text-muted small">Shipping Address</label>
                            <div>
                                @if (Model.Order.Address != null)
                                {
                                    <small>
                                        @Model.Order.Address.StreetAddress<br />
                                        @Model.Order.Address.City, @Model.Order.Address.State @Model.Order.Address.PostalCode<br />
                                        @Model.Order.Address.Country
                                    </small>
                                }
                            </div>
                        </div>
                    </div>

                    <hr />

                    <!-- Order Summary -->
                    <div class="row">
                        <div class="col-md-6">
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-muted">Subtotal:</span>
                                <span>@Model.Order.Subtotal.ToString("N0") VND</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-muted">Tax:</span>
                                <span>@Model.Order.TaxTotal.ToString("N0") VND</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-muted">Shipping:</span>
                                <span>@Model.Order.ShippingFee.ToString("N0") VND</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex justify-content-between mb-2">
                                <span class="text-muted">Discount:</span>
                                <span class="text-danger">-@Model.Order.DiscountTotal.ToString("N0") VND</span>
                            </div>
                            @if (Model.Order.Coupon != null)
                            {
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="text-muted">Coupon:</span>
                                    <span class="badge bg-success">@Model.Order.Coupon.Code</span>
                                </div>
                            }
                            <hr />
                            <div class="d-flex justify-content-between">
                                <strong>Grand Total:</strong>
                                <strong class="text-success fs-5">@Model.Order.GrandTotal.ToString("N0") VND</strong>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Items Card -->
            if (Model.Order.OrderItems != null && Model.Order.OrderItems.Any())
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-secondary text-white">
                        <h5 class="mb-0">
                            <i class="bi bi-cart"></i> Order Items (@Model.Order.OrderItems.Count)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Product</th>
                                        <th>Variant</th>
                                        <th class="text-center">Quantity</th>
                                        <th class="text-end">Unit Price</th>
                                        <th class="text-end">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Order.OrderItems)
                                    {
                                        <tr>
                                            <td>
                                                <div class="fw-semibold">@item.ProductVariant.Product.ProductName</div>
                                                <small class="text-muted">SKU: @item.ProductVariant.SKU</small>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.ProductVariant.MetalType))
                                                {
                                                    <span class="badge bg-warning text-dark">@item.ProductVariant.MetalType</span>
                                                }
                                                @if (!string.IsNullOrEmpty(item.ProductVariant.Purity))
                                                {
                                                    <span class="badge bg-info">@item.ProductVariant.Purity</span>
                                                }
                                                @if (!string.IsNullOrEmpty(item.ProductVariant.RingSize))
                                                {
                                                    <span class="badge bg-secondary">Size @item.ProductVariant.RingSize</span>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <span class="badge bg-light text-dark">×@item.Quantity</span>
                                            </td>
                                            <td class="text-end">@item.UnitPrice.ToString("N0") VND</td>
                                            <td class="text-end fw-semibold">@((item.UnitPrice * item.Quantity).ToString("N0")) VND</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Right Column: Actions & Timeline -->
    <div class="col-lg-4">
        <!-- Quick Actions Card -->
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-dark text-white">
                <h5 class="mb-0">
                    <i class="bi bi-lightning"></i> Quick Actions
                </h5>
            </div>
            <div class="card-body">
                <!-- Authorize Payment -->
                @if (Model.Status == "Pending")
                {
                    using (Html.BeginForm("Authorize", "Payments", FormMethod.Post, new { id = "authorizeForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Model.PaymentID)
                        <button type="button" class="btn btn-info w-100 mb-2" onclick="confirmAuthorize()">
                            <i class="bi bi-check-circle"></i> Authorize Payment
                        </button>
                    }
                }

                <!-- Capture Payment -->
                @if (Model.Status == "Pending" || Model.Status == "Authorized")
                {
                    using (Html.BeginForm("Capture", "Payments", FormMethod.Post, new { id = "captureForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Model.PaymentID)
                        <button type="button" class="btn btn-success w-100 mb-2" onclick="confirmCapture()">
                            <i class="bi bi-cash-coin"></i> Capture Payment
                        </button>
                    }
                }

                <!-- Refund Payment -->
                @if (Model.Status == "Captured")
                {
                    <button type="button" class="btn btn-warning w-100 mb-2" data-bs-toggle="modal" data-bs-target="#refundModal">
                        <i class="bi bi-arrow-counterclockwise"></i> Refund Payment
                    </button>
                }

                <!-- Mark as Failed -->
                @if (Model.Status != "Captured" && Model.Status != "Refunded" && Model.Status != "Failed")
                {
                    <button type="button" class="btn btn-danger w-100 mb-2" data-bs-toggle="modal" data-bs-target="#failedModal">
                        <i class="bi bi-x-circle"></i> Mark as Failed
                    </button>
                }

                <hr />

                <!-- Edit Payment -->
                <a href="@Url.Action("Edit", new { id = Model.PaymentID })" class="btn btn-outline-primary w-100 mb-2">
                    <i class="bi bi-pencil"></i> Edit Payment Details
                </a>

                <!-- View Order -->
                <a href="@Url.Action("Details", "Orders", new { id = Model.OrderID })" class="btn btn-outline-info w-100">
                    <i class="bi bi-box-seam"></i> View Full Order
                </a>
            </div>
        </div>

        <!-- Payment Timeline Card -->
        <div class="card shadow-sm">
            <div class="card-header bg-secondary text-white">
                <h5 class="mb-0">
                    <i class="bi bi-clock-history"></i> Payment Timeline
                </h5>
            </div>
            <div class="card-body">
                <div class="timeline">
                    <!-- Created -->
                    <div class="timeline-item">
                        <div class="timeline-icon bg-primary">
                            <i class="bi bi-plus-circle"></i>
                        </div>
                        <div class="timeline-content">
                            <h6 class="mb-1">Payment Created</h6>
                            <small class="text-muted">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm:ss")</small>
                            <div class="mt-1">
                                <span class="badge bg-primary">@Model.Status</span>
                            </div>
                        </div>
                    </div>

                    <!-- Captured -->
                    @if (Model.CapturedAt.HasValue)
                    {
                        <div class="timeline-item">
                            <div class="timeline-icon bg-success">
                                <i class="bi bi-check-circle"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Payment Captured</h6>
                                <small class="text-muted">@Model.CapturedAt.Value.ToString("dd/MM/yyyy HH:mm:ss")</small>
                                <div class="mt-1">
                                    <span class="badge bg-success">Captured</span>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Current Status -->
                    @if (Model.Status == "Refunded" || Model.Status == "Failed")
                    {
                        <div class="timeline-item">
                            <div class="timeline-icon bg-@(Model.Status == "Refunded" ? "secondary" : "danger")">
                                <i class="bi bi-@(Model.Status == "Refunded" ? "arrow-counterclockwise" : "x-circle")"></i>
                            </div>
                            <div class="timeline-content">
                                <h6 class="mb-1">Payment @Model.Status</h6>
                                <small class="text-muted">Status updated</small>
                                <div class="mt-1">
                                    @Html.Partial("_PaymentStatusBadge", Model.Status)
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Refund Modal -->
<div class="modal fade" id="refundModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("Refund", "Payments", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("id", Model.PaymentID)
                <div class="modal-header bg-warning">
                    <h5 class="modal-title">
                        <i class="bi bi-arrow-counterclockwise"></i> Refund Payment
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                        <strong>Warning:</strong> This will refund <strong>@Model.Amount.ToString("N0") @Model.Currency</strong> to the customer and cancel the order.
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Refund Reason (Optional)</label>
                        <textarea name="refundReason" class="form-control" rows="3" placeholder="Enter reason for refund..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-arrow-counterclockwise"></i> Confirm Refund
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<!-- Failed Modal -->
<div class="modal fade" id="failedModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            @using (Html.BeginForm("MarkAsFailed", "Payments", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("id", Model.PaymentID)
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="bi bi-x-circle"></i> Mark Payment as Failed
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i>
                        <strong>Warning:</strong> This action cannot be undone. The payment will be marked as Failed.
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Failure Reason (Optional)</label>
                        <textarea name="failureReason" class="form-control" rows="3" placeholder="Enter reason for failure..."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-x-circle"></i> Mark as Failed
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function confirmAuthorize() {
        if (confirm('Are you sure you want to authorize this payment?')) {
            document.getElementById('authorizeForm').submit();
        }
    }

    function confirmCapture() {
        if (confirm('Are you sure you want to capture this payment? Amount: @Model.Amount.ToString("N0") @Model.Currency')) {
            document.getElementById('captureForm').submit();
        }
    }
</script>

<style>
    .timeline {
        position: relative;
        padding: 0;
    }

    .timeline-item {
        position: relative;
        padding-left: 50px;
        padding-bottom: 25px;
    }

        .timeline-item:last-child {
            padding-bottom: 0;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: 20px;
            top: 30px;
            bottom: -25px;
            width: 2px;
            background: #dee2e6;
        }

        .timeline-item:last-child::before {
            display: none;
        }

    .timeline-icon {
        position: absolute;
        left: 0;
        top: 0;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
    }

    .timeline-content h6 {
        margin: 0;
        font-weight: 600;
    }
</style>