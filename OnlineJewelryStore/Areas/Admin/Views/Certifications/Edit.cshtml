@model OnlineJewelryStore.Models.Certification

@{
    ViewBag.Title = "Edit Certification";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@* Custom CSS for Edit Form *@
<style>
    .edit-header {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(240, 147, 251, 0.2);
    }

    .id-badge {
        background: rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
        padding: 0.5rem 1.5rem;
        border-radius: 25px;
        font-weight: 600;
        display: inline-block;
        margin-top: 0.5rem;
    }

    .variant-context {
        background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .form-container {
        background: white;
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .section-title {
        color: #f5576c;
        font-weight: 600;
        margin-bottom: 1.5rem;
        padding-bottom: 0.5rem;
        border-bottom: 3px solid #f093fb;
        display: flex;
        align-items: center;
    }

        .section-title i {
            font-size: 1.5rem;
            margin-right: 0.5rem;
        }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .info-item {
        background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
        padding: 1rem;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

        .info-item strong {
            display: block;
            color: #f5576c;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
        }

        .info-item span {
            display: block;
            color: #333;
            font-weight: 600;
            font-size: 1.1rem;
        }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

        .form-label .required {
            color: #dc3545;
            margin-left: 0.25rem;
        }

    .form-control:focus,
    .form-select:focus {
        border-color: #f093fb;
        box-shadow: 0 0 0 0.2rem rgba(240, 147, 251, 0.25);
    }

    .help-text {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 0.25rem;
        display: block;
    }

        .help-text i {
            color: #f5576c;
        }

    .btn-update {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        border: none;
        color: white;
        padding: 0.75rem 2rem;
        font-weight: 600;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(240, 147, 251, 0.3);
        transition: all 0.3s ease;
    }

        .btn-update:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(240, 147, 251, 0.4);
            background: linear-gradient(135deg, #e082eb 0%, #e5475c 100%);
            color: white;
        }

    .btn-cancel {
        background: #6c757d;
        border: none;
        color: white;
        padding: 0.75rem 2rem;
        font-weight: 600;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

        .btn-cancel:hover {
            background: #5a6268;
            color: white;
            transform: translateY(-2px);
        }

    .info-box {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border-left: 4px solid #2196f3;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1.5rem;
    }

        .info-box i {
            color: #2196f3;
            font-size: 1.2rem;
        }

    .current-value {
        background: #f8f9fa;
        border-left: 3px solid #f093fb;
        padding: 0.75rem;
        border-radius: 5px;
        margin-bottom: 1rem;
    }

        .current-value strong {
            color: #f5576c;
        }
</style>

@* Breadcrumb *@
<nav aria-label="breadcrumb" style="margin-bottom: 1.5rem;">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Products")">Products</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Details", "Products", new { id = ViewBag.ProductID })">@ViewBag.ProductName</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "ProductVariants", new { productId = ViewBag.ProductID })">Variants</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Certifications", new { variantId = ViewBag.VariantID })">SKU: @ViewBag.SKU</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Edit Certification</li>
    </ol>
</nav>

@* Header *@
<div class="edit-header">
    <h2 class="mb-2">
        <i class="bi bi-pencil-square me-2"></i>Edit Certification
    </h2>
    <p class="mb-2 opacity-75">
        Update certificate information and verification details
    </p>
    <div class="id-badge">
        <i class="bi bi-fingerprint me-2"></i>ID: @Model.CertificationID
    </div>
</div>

@* Variant Context Info *@
<div class="variant-context">
    <div class="row g-3">
        <div class="col-md-6">
            <div class="d-flex align-items-center mb-2">
                <i class="bi bi-box-seam text-white me-2" style="font-size: 1.2rem;"></i>
                <strong style="color: white;">Product:</strong>
                <span class="ms-2" style="color: white;">@ViewBag.ProductName</span>
            </div>
            <div class="d-flex align-items-center">
                <i class="bi bi-tag text-white me-2" style="font-size: 1.2rem;"></i>
                <strong style="color: white;">Category:</strong>
                <span class="ms-2" style="color: white;">@ViewBag.CategoryName</span>
            </div>
        </div>
        <div class="col-md-6">
            <div class="d-flex align-items-center mb-2">
                <i class="bi bi-upc-scan text-white me-2" style="font-size: 1.2rem;"></i>
                <strong style="color: white;">SKU:</strong>
                <span class="ms-2" style="color: white;">@ViewBag.SKU</span>
            </div>
            <div class="d-flex align-items-center">
                <i class="bi bi-gem text-white me-2" style="font-size: 1.2rem;"></i>
                <strong style="color: white;">Metal:</strong>
                <span class="ms-2" style="color: white;">
                    @(ViewBag.MetalType ?? "N/A")
                    @(ViewBag.Purity != null ? $"({ViewBag.Purity})" : "")
                </span>
            </div>
        </div>
    </div>
</div>

@* Current Values Info Grid *@
<div class="info-grid">
    <div class="info-item">
        <strong><i class="bi bi-award me-1"></i>Current Certifier</strong>
        <span>@Model.Certifier</span>
    </div>
    <div class="info-item">
        <strong><i class="bi bi-hash me-1"></i>Current Certificate Number</strong>
        <span>@(Model.CertificateNumber ?? "Not Set")</span>
    </div>
    <div class="info-item">
        <strong><i class="bi bi-link-45deg me-1"></i>Current Verification URL</strong>
        <span style="font-size: 0.9rem; word-break: break-all;">
            @if (!string.IsNullOrEmpty(Model.VerificationURL))
            {
                <a href="@Model.VerificationURL" target="_blank" style="color: #f5576c;">
                    @(Model.VerificationURL.Length > 40 ? Model.VerificationURL.Substring(0, 37) + "..." : Model.VerificationURL)
                    <i class="bi bi-box-arrow-up-right ms-1"></i>
                </a>
            }
            else
            {
                <span class="text-muted">Not Set</span>
            }
        </span>
    </div>
</div>

@* Form *@
<div class="form-container">
    @using (Html.BeginForm("Edit", "Certifications", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CertificationID)
        @Html.HiddenFor(model => model.VariantID)

        @* Validation Summary *@
        if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                <strong>Please fix the following errors:</strong>
                @Html.ValidationSummary(true, "", new { @class = "mb-0 mt-2" })
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @* Section 1: Certification Details *@
        <div class="mb-4">
            <h5 class="section-title">
                <i class="bi bi-award"></i>
                Certification Information
            </h5>

            <div class="row g-3">
                @* Certifier *@
                <div class="col-md-6">
                    <label class="form-label">
                        Certifier
                        <span class="required">*</span>
                    </label>
                    @Html.DropDownListFor(model => model.Certifier,
                        (SelectList)ViewBag.CertifierList,
                        "-- Select Certifier --",
                        new { @class = "form-select", required = "required" })
                    @Html.ValidationMessageFor(model => model.Certifier, "", new { @class = "text-danger small" })
                    <small class="help-text">
                        <i class="bi bi-info-circle"></i>
                        Choose the organization that issued the certificate
                    </small>
                </div>

                @* Certificate Number *@
                <div class="col-md-6">
                    <label class="form-label">
                        Certificate Number
                        <span class="text-muted">(Optional)</span>
                    </label>
                    @Html.TextBoxFor(model => model.CertificateNumber,
                        new
                             {
                            @class = "form-control",
                            placeholder = "e.g., GIA-1234567890",
                            maxlength = "100"
                        })
                    @Html.ValidationMessageFor(model => model.CertificateNumber, "", new { @class = "text-danger small" })
                    <small class="help-text">
                        <i class="bi bi-info-circle"></i>
                        Unique identifier for this certificate (must be unique across all certifications)
                    </small>
                </div>
            </div>
        </div>

        @* Section 2: Verification Details *@
        <div class="mb-4">
            <h5 class="section-title">
                <i class="bi bi-link-45deg"></i>
                Verification Details
            </h5>

            <div class="row g-3">
                @* Verification URL *@
                <div class="col-12">
                    <label class="form-label">
                        Verification URL
                        <span class="text-muted">(Optional)</span>
                    </label>
                    @Html.TextBoxFor(model => model.VerificationURL,
                        new
                             {
                            @class = "form-control",
                            type = "url",
                            placeholder = "https://www.gia.edu/report-check?reportno=1234567890",
                            maxlength = "255"
                        })
                    @Html.ValidationMessageFor(model => model.VerificationURL, "", new { @class = "text-danger small" })
                    <small class="help-text">
                        <i class="bi bi-info-circle"></i>
                        Website URL where customers can verify the certificate online (must start with http:// or https://)
                    </small>
                </div>
            </div>
        </div>

        @* Info Box *@
        <div class="info-box">
            <div class="d-flex">
                <div class="me-3">
                    <i class="bi bi-lightbulb-fill"></i>
                </div>
                <div>
                    <strong>Update Guidelines:</strong>
                    <ul class="mb-0 mt-2" style="font-size: 0.9rem;">
                        <li>If you change the Certificate Number, make sure it's still <strong>unique</strong></li>
                        <li>Verification URL must be a valid HTTP or HTTPS URL</li>
                        <li>You can leave Certificate Number or Verification URL empty if not needed</li>
                        <li>All changes are saved immediately upon submission</li>
                    </ul>
                </div>
            </div>
        </div>

        @* Action Buttons *@
        <div class="d-flex justify-content-between align-items-center mt-4 pt-3 border-top">
            <a href="@Url.Action("Index", new { variantId = Model.VariantID })"
               class="btn btn-cancel">
                <i class="bi bi-x-circle me-2"></i>Cancel
            </a>
            <button type="submit" class="btn btn-update">
                <i class="bi bi-check-circle me-2"></i>Update Certification
            </button>
        </div>
    }
</div>

@* Additional Info Alert *@
<div class="alert alert-info mt-4" role="alert">
    <i class="bi bi-info-circle-fill me-2"></i>
    <strong>Editing Certification ID @Model.CertificationID</strong><br />
    Make sure all information is accurate before saving changes. The certificate number must remain unique.
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Bootstrap 5 form validation
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });

            // Auto-dismiss alerts
            setTimeout(function () {
                $('.alert-dismissible').alert('close');
            }, 5000);

            // Certifier dropdown change event
            $('#Certifier').on('change', function () {
                const certifier = $(this).val();
                let placeholder = 'e.g., 1234567890';
                let urlPlaceholder = 'https://example.com/verify';

                if (certifier === 'GIA') {
                    placeholder = 'e.g., GIA-1234567890';
                    urlPlaceholder = 'https://www.gia.edu/report-check?reportno=1234567890';
                } else if (certifier === 'AGS') {
                    placeholder = 'e.g., AGS-104123456789';
                    urlPlaceholder = 'https://www.americangemsociety.org/verify';
                }

                $('#CertificateNumber').attr('placeholder', placeholder);
                $('#VerificationURL').attr('placeholder', urlPlaceholder);
            });

            // URL validation helper
            $('#VerificationURL').on('blur', function () {
                const url = $(this).val().trim();
                if (url && !url.startsWith('http://') && !url.startsWith('https://')) {
                    $(this).addClass('is-invalid');
                    if (!$(this).next('.invalid-feedback').length) {
                        $(this).after('<div class="invalid-feedback">URL must start with http:// or https://</div>');
                    }
                } else {
                    $(this).removeClass('is-invalid');
                    $(this).next('.invalid-feedback').remove();
                }
            });

            // Highlight changed fields
            $('input, select').on('change', function () {
                $(this).addClass('border-warning');
                setTimeout(() => {
                    $(this).removeClass('border-warning');
                }, 2000);
            });
        });
    </script>
}