@model OnlineJewelryStore.Models.User

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Dashboard")">
                <i class="bi bi-house-door"></i> Dashboard
            </a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Users")">Users</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">Edit</li>
    </ol>
</nav>

<!-- Page Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="bi bi-pencil-square text-primary me-2"></i>Edit User
        </h2>
        <p class="text-muted mb-0">Update user information below</p>
    </div>
    <div class="d-flex gap-2">
        <a href="@Url.Action("Details", new { id = Model.UserID })" class="btn btn-outline-info">
            <i class="bi bi-eye me-1"></i> View Details
        </a>
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i> Back to List
        </a>
    </div>
</div>

<!-- Edit Form -->
<div class="row">
    <!-- Left Column: Editable Fields -->
    <div class="col-lg-8">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="bi bi-pencil me-2"></i>Editable Information
                </h5>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Edit", "Users", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.UserID)

                    <!-- Validation Summary -->
                    if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            <strong>Please fix the following errors:</strong>
                            @Html.ValidationSummary(true, "", new { @class = "mb-0 mt-2" })
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <!-- Personal Information Section -->
                    <div class="mb-4">
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="bi bi-person-circle text-primary me-2"></i>Personal Information
                        </h6>

                        <div class="row">
                            <!-- First Name -->
                            <div class="col-md-6 mb-3">
                                <label for="FirstName" class="form-label">
                                    First Name <span class="text-danger">*</span>
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-person"></i>
                                    </span>
                                    @Html.TextBoxFor(model => model.FirstName, new
                                    {
                                        @class = "form-control",
                                        placeholder = "Enter first name",
                                        required = "required",
                                        maxlength = "100"
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger small" })
                            </div>

                            <!-- Last Name -->
                            <div class="col-md-6 mb-3">
                                <label for="LastName" class="form-label">
                                    Last Name <span class="text-danger">*</span>
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi bi-person"></i>
                                    </span>
                                    @Html.TextBoxFor(model => model.LastName, new
                                    {
                                        @class = "form-control",
                                        placeholder = "Enter last name",
                                        required = "required",
                                        maxlength = "100"
                                    })
                                </div>
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger small" })
                            </div>
                        </div>
                    </div>

                    <!-- Contact Information Section -->
                    <div class="mb-4">
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="bi bi-envelope text-primary me-2"></i>Contact Information
                        </h6>

                        <!-- Email -->
                        <div class="mb-3">
                            <label for="Email" class="form-label">
                                Email Address <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-envelope"></i>
                                </span>
                                @Html.TextBoxFor(model => model.Email, new
                                {
                                    @class = "form-control",
                                    type = "email",
                                    placeholder = "user@example.com",
                                    required = "required",
                                    maxlength = "255"
                                })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger small" })
                            <small class="form-text text-muted">
                                <i class="bi bi-info-circle me-1"></i>Must be unique and valid email format
                            </small>
                        </div>

                        <!-- Phone -->
                        <div class="mb-3">
                            <label for="Phone" class="form-label">
                                Phone Number <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-telephone"></i>
                                </span>
                                @Html.TextBoxFor(model => model.Phone, new
                                {
                                    @class = "form-control",
                                    type = "tel",
                                    placeholder = "0123456789",
                                    required = "required",
                                    maxlength = "20"
                                })
                            </div>
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger small" })
                            <small class="form-text text-muted">
                                <i class="bi bi-info-circle me-1"></i>Format: 10 digits (e.g., 0901234567)
                            </small>
                        </div>
                    </div>

                    <!-- Account Security Section -->
                    <div class="mb-4">
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="bi bi-shield-lock text-primary me-2"></i>Account Security
                        </h6>

                        <!-- Password -->
                        <div class="mb-3">
                            <label for="PasswordHash" class="form-label">
                                Password <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-key"></i>
                                </span>
                                @Html.TextBoxFor(model => model.PasswordHash, new
                                {
                                    @class = "form-control",
                                    type = "text",
                                    placeholder = "Enter new password",
                                    required = "required",
                                    minlength = "3",
                                    maxlength = "50"
                                })
                            </div>
                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger small" })
                            <small class="form-text text-muted">
                                <i class="bi bi-info-circle me-1"></i>Minimum 3 characters (plaintext - demo only)
                            </small>
                        </div>

                        <!-- Role -->
                        <div class="mb-3">
                            <label for="Role" class="form-label">
                                User Role <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-person-badge"></i>
                                </span>
                                @Html.DropDownListFor(model => model.Role, new SelectList(new[] {
                                    new { Value = "Customer", Text = "Customer" },
                                    new { Value = "Administrator", Text = "Administrator" }
                                }, "Value", "Text", Model.Role), new { @class = "form-select", required = "required" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger small" })
                            <small class="form-text text-muted">
                                <i class="bi bi-info-circle me-1"></i>
                                <span class="badge bg-success me-1">Customer</span> Normal user with shopping access |
                                <span class="badge bg-danger me-1">Administrator</span> Full system access
                            </small>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="d-flex justify-content-between align-items-center pt-3 border-top">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="bi bi-x-circle me-1"></i> Cancel
                        </a>
                        <button type="submit" class="btn btn-primary px-4">
                            <i class="bi bi-check-circle me-1"></i> Save Changes
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Right Column: Readonly Information -->
    <div class="col-lg-4">
        <!-- User Avatar Card -->
        <div class="card shadow-sm mb-3">
            <div class="card-body text-center">
                <div class="avatar-large bg-primary text-white mx-auto mb-3">
                    @(Model.FirstName?.Substring(0, 1).ToUpper())@(Model.LastName?.Substring(0, 1).ToUpper())
                </div>
                <h5 class="mb-1">@Model.FirstName @Model.LastName</h5>
                @if (Model.Role == "Administrator")
                {
                    <span class="badge bg-danger">
                        <i class="bi bi-shield-fill-check me-1"></i>Administrator
                    </span>
                }
                else
                {
                    <span class="badge bg-success">
                        <i class="bi bi-person-fill me-1"></i>Customer
                    </span>
                }
            </div>
        </div>

        <!-- Readonly Information Card -->
        <div class="card shadow-sm mb-3">
            <div class="card-header bg-light">
                <h6 class="mb-0">
                    <i class="bi bi-lock-fill text-muted me-2"></i>Readonly Information
                </h6>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label text-muted small mb-1">
                        <i class="bi bi-hash me-1"></i>User ID
                    </label>
                    <div class="form-control-plaintext bg-light p-2 rounded">
                        <strong class="text-primary">#@Model.UserID</strong>
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label text-muted small mb-1">
                        <i class="bi bi-calendar-plus me-1"></i>Registration Date
                    </label>
                    <div class="form-control-plaintext bg-light p-2 rounded">
                        @Model.RegistrationDate.ToString("dd/MM/yyyy HH:mm")
                    </div>
                </div>

                @if (Model.LastLogin.HasValue)
                {
                    <div class="mb-3">
                        <label class="form-label text-muted small mb-1">
                            <i class="bi bi-clock-history me-1"></i>Last Login
                        </label>
                        <div class="form-control-plaintext bg-light p-2 rounded">
                            @Model.LastLogin.Value.ToString("dd/MM/yyyy HH:mm")
                            <br />
                            <small class="text-muted">
                                @{
                                    var daysSinceLogin = (DateTime.Now - Model.LastLogin.Value).Days;
                                    if (daysSinceLogin == 0)
                                    {
                                        <text>Today</text>
                                    }
                                    else if (daysSinceLogin == 1)
                                    {
                                        <text>Yesterday</text>
                                    }
                                    else
                                    {
                                        @daysSinceLogin <text>days ago</text>
                                    }
                                }
                            </small>
                        </div>
                    </div>
                }
                else
                {
                    <div class="mb-3">
                        <label class="form-label text-muted small mb-1">
                            <i class="bi bi-clock-history me-1"></i>Last Login
                        </label>
                        <div class="form-control-plaintext bg-light p-2 rounded">
                            <span class="text-muted">Never logged in</span>
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.SocialLoginProvider))
                {
                    <div class="mb-0">
                        <label class="form-label text-muted small mb-1">
                            <i class="bi bi-google me-1"></i>Social Login Provider
                        </label>
                        <div class="form-control-plaintext bg-light p-2 rounded">
                            <span class="badge bg-info">
                                <i class="bi bi-box-arrow-in-right me-1"></i>@Model.SocialLoginProvider
                            </span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="mb-0">
                        <label class="form-label text-muted small mb-1">
                            <i class="bi bi-google me-1"></i>Social Login Provider
                        </label>
                        <div class="form-control-plaintext bg-light p-2 rounded">
                            <span class="text-muted">Not connected</span>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Info Card -->
        <div class="card border-info">
            <div class="card-body">
                <h6 class="card-title text-info">
                    <i class="bi bi-info-circle-fill me-2"></i>Important Notes
                </h6>
                <ul class="mb-0 small">
                    <li class="mb-2">UserID and Registration Date cannot be changed</li>
                    <li class="mb-2">Email must be unique across all users</li>
                    <li class="mb-2">LastLogin is automatically updated when user signs in</li>
                    <li>Social Login Provider is set automatically when user connects social account</li>
                </ul>
            </div>
        </div>
    </div>
</div>

<style>
    /* Avatar Large */
    .avatar-large {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 40px;
        border: 4px solid white;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }

    /* Form styling */
    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .input-group-text {
        background-color: #f8f9fa;
        border-right: none;
        min-width: 45px;
        justify-content: center;
    }

    .input-group .form-control,
    .input-group .form-select {
        border-left: none;
    }

    .input-group:focus-within .input-group-text {
        border-color: #86b7fe;
        background-color: #e7f1ff;
    }

    .input-group:focus-within .form-control,
    .input-group:focus-within .form-select {
        border-color: #86b7fe;
    }

    /* Readonly field styling */
    .form-control-plaintext {
        font-size: 0.95rem;
    }

        .form-control-plaintext.bg-light {
            background-color: #f8f9fa !important;
        }

    /* Section headers */
    .border-bottom {
        border-color: #dee2e6 !important;
    }

    /* Required asterisk */
    .text-danger {
        color: #dc3545 !important;
    }

    /* Help text */
    .form-text {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.875rem;
    }

    /* Card styling */
    .card-header.bg-primary {
        background-color: #0d6efd !important;
    }

    .card-header.bg-light {
        background-color: #f8f9fa !important;
    }

    /* Badge spacing */
    .badge i {
        font-size: 0.85em;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Form validation feedback
            $('form').on('submit', function (e) {
                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                $(this).addClass('was-validated');
            });

            // Auto-format phone number (optional)
            $('#Phone').on('input', function () {
                var value = $(this).val().replace(/\D/g, '');
                $(this).val(value);
            });

            // Warn before leaving if form has changes
            var formChanged = false;
            $('form input, form select').on('change', function () {
                formChanged = true;
            });

            $('form').on('submit', function () {
                formChanged = false;
            });

            $(window).on('beforeunload', function () {
                if (formChanged) {
                    return 'You have unsaved changes. Are you sure you want to leave?';
                }
            });

            // Cancel button confirmation
            $('a[href*="Index"]').not('.breadcrumb a').on('click', function (e) {
                if (formChanged) {
                    if (!confirm('You have unsaved changes. Are you sure you want to leave?')) {
                        e.preventDefault();
                    }
                }
            });
        });
    </script>
}