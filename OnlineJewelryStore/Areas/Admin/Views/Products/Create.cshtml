@model OnlineJewelryStore.Models.Product

@{
    ViewBag.Title = "Create Product";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.ActiveMenu = "Products";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0"><i class="bi bi-plus-circle"></i> Create New Product</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { @class = "needs-validation" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                        <div class="row">
                            <!-- Product Name -->
                            <div class="col-12 mb-3">
                                <label class="form-label fw-bold">Product Name <span class="text-danger">*</span></label>
                                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", placeholder = "Enter product name (e.g., Diamond Engagement Ring)" })
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>

                            <!-- Category -->
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-bold">Category <span class="text-danger">*</span></label>
                                @Html.DropDownList("CategoryID", (IEnumerable<SelectListItem>)ViewBag.CategoryID, "-- Select Category --", new { @class = "form-select" })
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>

                            <!-- Base Price -->
                            <div class="col-md-6 mb-3">
                                <label class="form-label fw-bold">Base Price (VNĐ) <span class="text-danger">*</span></label>
                                @Html.TextBoxFor(model => model.BasePrice, new { @class = "form-control", type = "number", step = "1000", placeholder = "e.g., 5000000" })
                                @Html.ValidationMessageFor(model => model.BasePrice, "", new { @class = "text-danger" })
                                <small class="text-muted">Base price before adding metal/gemstone costs</small>
                            </div>

                            <!-- Description -->
                            <div class="col-12 mb-3">
                                <label class="form-label fw-bold">Description</label>
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 5, placeholder = "Enter detailed product description..." })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                <small class="text-muted">Describe the product features, materials, craftsmanship, etc.</small>
                            </div>

                            <!-- IsActive -->
                            <div class="col-12 mb-3">
                                <div class="form-check form-switch">
                                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input", @checked = "checked" })
                                    <label class="form-check-label fw-bold">Active (visible to customers)</label>
                                </div>
                                <small class="text-muted">Uncheck to hide this product from the store</small>
                            </div>
                        </div>

                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i>
                            <strong>Note:</strong> After creating the product, you'll need to add variants (SKU, metal type, sizes) and upload images in the product details page.
                        </div>

                        <hr />

                        <div class="d-flex justify-content-between">
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-secondary" })
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-save"></i> Create Product
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
